name: GCP Fundamentals - Getting Started with Cloud Storage and Cloud SQL - Test  
description: "The script deploys a web server VM instance and, creates a Cloud Storage bucket and a Cloud SQL instance."
deployment_manager_time: 500
run_regularly: true
failure_alerts_only: true
subscribers:
 - training-qa-testers@google.com
 - jrambo@google.com
steps:
 - command: |
    # Enable the Compute Engine API
    gcloud -q services enable compute.googleapis.com
    # Deploy a web server VM instance
    gcloud compute --project=$PROJECT instances create bloghost --zone=$ZONE --machine-type=n1-standard-1 --subnet=default --metadata=startup-script=apt-get\ update$'\n'apt-get\ install\ apache2\ php\ php-mysql\ -y$'\n'service\ apache2\ restart --tags=http-server --image=debian-9-stretch-v20190213 --image-project=debian-cloud
    gcloud compute --project=$PROJECT firewall-rules create default-allow-http --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:80 --source-ranges=0.0.0.0/0 --target-tags=http-server
    # Create a Cloud Storage bucket using the gsutil command line
    export LOCATION=US
    gsutil mb -l $LOCATION gs://$PROJECT
    gsutil cp gs://cloud-training/gcpfci/my-excellent-blog.png my-excellent-blog.png
    gsutil cp my-excellent-blog.png gs://$PROJECT/my-excellent-blog.png
    gsutil acl ch -u AllUsers:R gs://$PROJECT/my-excellent-blog.png
    # Create Cloud SQL instance
    gcloud sql instances create blog-db --zone $ZONE
    # Set the password to the Cloud SQL instance
    gcloud sql users create blogdbuser --instance=blog-db, -i blog-db --host=% --password=rootuser
    INSTANCE_IP=$(gcloud compute instances list --filter 'name=bloghost' --format="value(EXTERNAL_IP)")
    gcloud sql instances patch blog-db --quiet --authorized-networks=$INSTANCE_IP/32
    SQL_IP=$(gcloud sql instances describe blog-db --format='value(ipAddresses[ipAddress])')
    gcloud compute ssh bloghost --zone=$ZONE --quiet <<EOF
    sudo chmod -R 777 /var/www/html/
    cd /var/www/html/
    sudo cat >> index.php <<'EOT'
    <html>
    <head><title>Welcome to my excellent blog</title></head>
    <body>
    <img src='https://storage.googleapis.com/$DEVSHELL_PROJECT_ID/my-excellent-blog.png'>
    <h1>Welcome to my excellent blog</h1>
    <?php
    \$dbserver = "$SQL_IP";
    \$dbuser = "blogdbuser";
    \$dbpassword = "rootuser";
    // In a production blog, we would not store the MySQL
    // password in the document root. Instead, we would store it in a
    // configuration file elsewhere on the web server VM instance.
    \$conn = new mysqli(\$dbserver, \$dbuser, \$dbpassword);
    if (mysqli_connect_error()) {
            echo ("Database connection failed: " . mysqli_connect_error());
    } else {
            echo ("Database connection succeeded.");
    }
    ?>
    </body></html>
    EOT
    sudo service apache2 restart
    EOF